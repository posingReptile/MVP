@import url('https://fonts.googleapis.com/css?family=Montserrat');

:root {
  --color:blue;
  --wallColor: brown;
}

body {
  margin: 0;
  background-image: url(./Maze_MainMenuBG.svg);
  background-size: cover;
}

svg {
  fill: #fff;
}
button {
  background: transparent;
  border: 2px solid white;
  border-radius: 10%;
  color: #fff;
}
button:hover {
  border: 2px solid brown;
  color:brown;
}
h1 h2{
  color:#fff;
}
h1 {
  color:#fff;
  display: flex;
  justify-content: center;
}

#app {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
}

#title {
  color:rgb(63, 65, 66);
  margin: 0 auto;
}

#levelTitle {
  margin: 0 auto;
}

#menu {
  width: 85vmin;
  height: 74vmin;
  display: flex;
  flex-direction: column;
  background: url(./Title.svg);
  background-repeat: no-repeat;
  background-size: 100%;
  justify-content: center;
  position: relative;
}
#menu button {
  margin-top: auto;
  /* outline: transparent; */
}

/* .ReactModal__Overlay.ReactModal__Overlay--after-open {
  outline: 0;
} */

.ReactModal__Content.ReactModal__Content--after-open.scoreModal {
  outline: 0;
}
.overlay-base {
  position: absolute;
  border: transparent;
  outline: 0;
  top: 50%;  
  left: 50%; 
  transform: translate(-50%, -50%);
  width: 85vmin;
  height: 85vmin;
  color: #fff;
  opacity: 0;
  transition-property: background-color, opacity;
  transition-duration: 500ms;
  transition-timing-function: ease-in-out;
}
.overlay-after {
  border-radius: 10%;
  background-color: rgba(0, 0, 0, 0.9);
  opacity: 1;
}
.overlay-before {
  background-color: rgba(0, 0, 0, 0);
  opacity: 0;
}

#scoreTitle {
  margin: 0 auto;
  margin-top: 15%;
  color: white;
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#scoreModal {
  width: 85vmin;
  height: 85vmin;
  background-color: rgb(0, 0, 0);
  backface-visibility: 90%;
}

/* #ReactModalPortal {
  inset: auto !important;
  border: 10px !important;
  position: absolute !important;
  top: 40% !important;
  left: 47% !important;
} */
/* #scoreModalOverlay {
  position: relative;
} */

#game-board {
  width: 85vmin;
  height: 85vmin;
  display: grid;
  grid-template-rows: repeat(21, 1fr);
  grid-template-columns: repeat(21, 1fr);
  color:aquamarine;
  grid-gap: .5vmin;
  border-radius: 5px;

}

.snake {
  background-color: var(--color);
  border: .25vmin solid black;
  border-radius: 10%;

}

.food {
  background-color: rgba(202, 202, 202, 0.8);
  width: 100%;
  /* border: .25vmin solid black; */
  border-radius: 10%;
}

.wall {
  background-color: var(--wallColor);
  border: .25vmin solid black;
  border-radius: 10%;
}

.space {
  border-radius: 10%;
  background-color: rgba(202, 202, 202, 0.8);
}

#play {
  width: 25%;
  margin: 0 auto; 
  fill: none;
  stroke: #fff;
  margin-top: 10%;
  stroke-miterlimit: 10;
  stroke-width: 1.5%;
}

#play:hover {
  cursor: pointer;
  stroke: brown;
}

#highScore {  
  position: absolute;
  fill: none;
  left: 18%;
  width: 20%;
  bottom: 20%;
  stroke: #fff;
  stroke-miterlimit: 10;
  stroke-width: 1.5%;
}

#highScore:hover {
  cursor: pointer;
  stroke: brown;
}

#setting {  
  position: absolute;
  fill: none;
  right: 18%;
  width: 20%;
  bottom: 20%;
  stroke: #fff;
  stroke-miterlimit: 10;
  stroke-width: 1.5%;
}

#setting:hover {
  cursor: pointer;
  stroke: brown;
}

.checkOut {
  position: absolute;
  bottom: 10%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 10%;
  height: 5%;
  background: transparent;
  border: 2px solid white;
  border-radius: 10%;
  color: #fff;
}

.checkOut:hover {
  cursor: pointer;
  color:brown;
  border: 2px solid brown;
}

.score {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 85vmin;
}

/* #scoreTitle {
} */

.contain {
  display: flex;
  margin: 0 auto;
  flex-direction: column;
  justify-content: center;
  width: 80%;
  height: 100%;
  outline: 0 !important;
}
#nextlevel {
  margin-top: 3%;
  width: 20%;
  position: relative;
  transform: translate(-100%, 0%);
}

#restart {
  margin-top: 3%;
  width: 20%;
  position: relative;
  transform: translate(-100%, 0%);
}

#settingTitle {
  font-size: 30vh;
}

#snakeColorSetting {
  color: var(--color);
}

#wallColorSetting {
  color: var(--wallColor);
}
#wallButton {
  position: unset;
}
#colorButton {
  position: unset;
}